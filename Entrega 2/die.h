/**
 * @brief Definition of the die structure and functions
 *
 * @file die.h
 * @author Group 1
 * @version 2.0
 * @date 30-10-2019
 */

#ifndef DIE_H
#define DIE_H
#include "types.h"

typedef struct _Die Die;

/**
 * @brief Creates a die
 * die_create(Id id, int min, int max) sets a die with the values between the min and max
 * @param id, identifier of the die
 * min, minimun value of the die
 * max, maximun value of the die
 * @return pointer to the die that has been created if the proccess is completed succesfully, NULL if crash
 */
Die* die_create(Id id, int min, int max);
/**
 * @brief Destroys a die
 * die_destroy(Die* die) frees the die pointer
 * @param die, pointer to the die to destroy
 * @return OK if the process is completed succesfully, ERROR in case of crush
 */
STATUS die_destroy(Die* die);
/**
 * @brief Rolls a die
 * die_roll(Die* die) Rolls the die and change the last value field with a random number
 * @param die, pointer to the die to roll
 * @return OK if the process is completed succesfully, ERROR in case of crush
 */
STATUS die_roll (Die* die);
/**
 * @brief Gets the last value of the die
 * die_last_value(Die* die) obtains the last random number generated by the die
 * @param die, pointer to the die
 * @return integer of the value or -1 in case of crush
 */
int die_last_value(Die* die);

/**
 * @brief Prints the last value and the id of a die
 * die_print(Die* die) prints the info of the die
 * @param die, pointer to the die
 * @return OK if the process is completed succesfully, ERROR in case of crush
 */
STATUS die_print(Die* die);


#endif
